# p_prop3d[, 2050-1950, ]<-p_prop3d[, 2049-1950, ]
#
# p_prop3dmat[is.na(p_prop3dmat)]<-0
# pop3d<-p_prop3dmat
# p_prop3d<-pop3dmat
# vc3d[, 2017-1950, 1]/pop3d[, 2017-1950, 1]
# #
# load("vaccination_data_20170118.Rdata")
#
#
# vc3d[grep("GMB",row.names(p_prop3d)),41,]
# #
# for(x in grep("GMB",row.names(p_prop3d))[2:length(grep("GMB",row.names(p_prop3d)))]){
#   vc3d[x,,] <- vc3d[grep("GMB",row.names(p_prop3d))[1],,]
#
# }
#
# which(row.names(vc3d) == "TZA_TZA_26")
# which(row.names(pop3d) == "TZA_26")
# which(row.names(p_prop3d) == "TZA_26")
# #
# vc3d<-vc3d[-406,,]
# pop3d<-pop3d[-406,,]
# p_prop3d<-p_prop3d[-406,,]
#
# save(pop3d, P_tot_2d, p_prop3d, vc3d, file = "vaccination_data_altered_20161212.Rdata")
#Load shapefiles
SPID<-read.csv("SPID.csv",stringsAsFactors = FALSE)
#Define opposite of %in%
'%!in%' <- function(x,y)!('%in%'(x,y))
#process
#Define different arrays
arraylist<-list(
Angolaarray                       =vc3d[head(grep("AGO",rownames(vc3d)),n=1):tail(grep("AGO",rownames(vc3d)),n=1),,],
Burundiarray                      =vc3d[head(grep("BDI",rownames(vc3d)),n=1):tail(grep("BDI",rownames(vc3d)),n=1),,],
Beninarray                        =vc3d[head(grep("BEN",rownames(vc3d)),n=1):tail(grep("BEN",rownames(vc3d)),n=1),,],
BurkinaFasoarray                  =vc3d[head(grep("BFA",rownames(vc3d)),n=1):tail(grep("BFA",rownames(vc3d)),n=1),,],
Cameroonarray                     =vc3d[head(grep("CMR",rownames(vc3d)),n=1):tail(grep("CMR",rownames(vc3d)),n=1),,],
CentralAfricanRepublicarray       =vc3d[head(grep("CAF",rownames(vc3d)),n=1):tail(grep("CAF",rownames(vc3d)),n=1),,],
CotedIvoirearray                  =vc3d[head(grep("CIV",rownames(vc3d)),n=1):tail(grep("CIV",rownames(vc3d)),n=1),,],
DemocraticRepublicoftheCongoarray =vc3d[head(grep("COD",rownames(vc3d)),n=1):tail(grep("COD",rownames(vc3d)),n=1),,],
RepublicofCongoarray              =vc3d[head(grep("COG",rownames(vc3d)),n=1):tail(grep("COG",rownames(vc3d)),n=1),,],
Eritreaarray                      =vc3d[head(grep("ERI",rownames(vc3d)),n=1):tail(grep("ERI",rownames(vc3d)),n=1),,],
Ethiopiaarray                     =vc3d[head(grep("ETH",rownames(vc3d)),n=1):tail(grep("ETH",rownames(vc3d)),n=1),,],
Gabonarray                        =vc3d[head(grep("GAB",rownames(vc3d)),n=1):tail(grep("GAB",rownames(vc3d)),n=1),,],
Ghanaarray                        =vc3d[head(grep("GHA",rownames(vc3d)),n=1):tail(grep("GHA",rownames(vc3d)),n=1),,],
Guineaarray                       =vc3d[head(grep("GIN",rownames(vc3d)),n=1):tail(grep("GIN",rownames(vc3d)),n=1),,],
Gambiaarray                       =vc3d[head(grep("GMB",rownames(vc3d)),n=1):tail(grep("GMB",rownames(vc3d)),n=1),,],
GuineaBissauarray                 =vc3d[head(grep("GNB",rownames(vc3d)),n=1):tail(grep("GNB",rownames(vc3d)),n=1),,],
EquatorialGuineaarray             =vc3d[head(grep("GNQ",rownames(vc3d)),n=1):tail(grep("GNQ",rownames(vc3d)),n=1),,],
Kenyaarray                        =vc3d[head(grep("KEN",rownames(vc3d)),n=1):tail(grep("KEN",rownames(vc3d)),n=1),,],
Liberiaarray                      =vc3d[head(grep("LBR",rownames(vc3d)),n=1):tail(grep("LBR",rownames(vc3d)),n=1),,],
Maliarray                         =vc3d[head(grep("MLI",rownames(vc3d)),n=1):tail(grep("MLI",rownames(vc3d)),n=1),,],
Mauritaniaarray                   =vc3d[head(grep("MRT",rownames(vc3d)),n=1):tail(grep("MRT",rownames(vc3d)),n=1),,],
Nigerarray                        =vc3d[head(grep("NER",rownames(vc3d)),n=1):tail(grep("NER",rownames(vc3d)),n=1),,],
Nigeriaarray                      =vc3d[head(grep("NGA",rownames(vc3d)),n=1):tail(grep("NGA",rownames(vc3d)),n=1),,],
Rwandaarray                       =vc3d[head(grep("RWA",rownames(vc3d)),n=1):tail(grep("RWA",rownames(vc3d)),n=1),,],
Sudanarray                        =vc3d[head(grep("SDN",rownames(vc3d)),n=1):tail(grep("SDN",rownames(vc3d)),n=1),,],
Senegalarray                      =vc3d[head(grep("SEN",rownames(vc3d)),n=1):tail(grep("SEN",rownames(vc3d)),n=1),,],
SierraLeonearray                  =vc3d[head(grep("SLE",rownames(vc3d)),n=1):tail(grep("SLE",rownames(vc3d)),n=1),,],
Somaliaarray                      =vc3d[head(grep("SOM",rownames(vc3d)),n=1):tail(grep("SOM",rownames(vc3d)),n=1),,],
SouthSudanarray                   =vc3d[head(grep("SSD",rownames(vc3d)),n=1):tail(grep("SSD",rownames(vc3d)),n=1),,],
Chadarray                         =vc3d[head(grep("TCD",rownames(vc3d)),n=1):tail(grep("TCD",rownames(vc3d)),n=1),,],
Tanzaniaarray                     =vc3d[head(grep("TZA",rownames(vc3d)),n=1):tail(grep("TZA",rownames(vc3d)),n=1),,],
Togoarray                         =vc3d[head(grep("TGO",rownames(vc3d)),n=1):tail(grep("TGO",rownames(vc3d)),n=1),,],
Ugandaarray                       =vc3d[head(grep("UGA",rownames(vc3d)),n=1):tail(grep("UGA",rownames(vc3d)),n=1),,],
Zambiaarray                       =vc3d[head(grep("ZMB",rownames(vc3d)),n=1):tail(grep("ZMB",rownames(vc3d)),n=1),,]
)
# '~~~¯\_(ツ)_/¯~~~'
#Define age pop total
agepoptotlist=list(
Angolaagepoptot                       =pop3d[head(grep("AGO",rownames(pop3d)),n=1):tail(grep("AGO",rownames(pop3d)),n=1),,],
Burundiagepoptot                      =pop3d[head(grep("BDI",rownames(pop3d)),n=1):tail(grep("BDI",rownames(pop3d)),n=1),,],
Beninagepoptot                        =pop3d[head(grep("BEN",rownames(pop3d)),n=1):tail(grep("BEN",rownames(pop3d)),n=1),,],
BurkinaFasoagepoptot                  =pop3d[head(grep("BFA",rownames(pop3d)),n=1):tail(grep("BFA",rownames(pop3d)),n=1),,],
Cameroonagepoptot                     =pop3d[head(grep("CMR",rownames(pop3d)),n=1):tail(grep("CMR",rownames(pop3d)),n=1),,],
CentralAfricanRepublicagepoptot       =pop3d[head(grep("CAF",rownames(pop3d)),n=1):tail(grep("CAF",rownames(pop3d)),n=1),,],
CotedIvoireagepoptot                  =pop3d[head(grep("CIV",rownames(pop3d)),n=1):tail(grep("CIV",rownames(pop3d)),n=1),,],
DemocraticRepublicoftheCongoagepoptot =pop3d[head(grep("COD",rownames(pop3d)),n=1):tail(grep("COD",rownames(pop3d)),n=1),,],
RepublicofCongoagepoptot              =pop3d[head(grep("COG",rownames(pop3d)),n=1):tail(grep("COG",rownames(pop3d)),n=1),,],
Eritreaagepoptot                      =pop3d[head(grep("ERI",rownames(pop3d)),n=1):tail(grep("ERI",rownames(pop3d)),n=1),,],
Ethiopiaagepoptot                     =pop3d[head(grep("ETH",rownames(pop3d)),n=1):tail(grep("ETH",rownames(pop3d)),n=1),,],
Gabonagepoptot                        =pop3d[head(grep("GAB",rownames(pop3d)),n=1):tail(grep("GAB",rownames(pop3d)),n=1),,],
Ghanaagepoptot                        =pop3d[head(grep("GHA",rownames(pop3d)),n=1):tail(grep("GHA",rownames(pop3d)),n=1),,],
Guineaagepoptot                       =pop3d[head(grep("GIN",rownames(pop3d)),n=1):tail(grep("GIN",rownames(pop3d)),n=1),,],
Gambiaagepoptot                       =pop3d[head(grep("GMB",rownames(pop3d)),n=1):tail(grep("GMB",rownames(pop3d)),n=1),,],
GuineaBissauagepoptot                 =pop3d[head(grep("GNB",rownames(pop3d)),n=1):tail(grep("GNB",rownames(pop3d)),n=1),,],
EquatorialGuineaagepoptot             =pop3d[head(grep("GNQ",rownames(pop3d)),n=1):tail(grep("GNQ",rownames(pop3d)),n=1),,],
Kenyaagepoptot                        =pop3d[head(grep("KEN",rownames(pop3d)),n=1):tail(grep("KEN",rownames(pop3d)),n=1),,],
Liberiaagepoptot                      =pop3d[head(grep("LBR",rownames(pop3d)),n=1):tail(grep("LBR",rownames(pop3d)),n=1),,],
Maliagepoptot                         =pop3d[head(grep("MLI",rownames(pop3d)),n=1):tail(grep("MLI",rownames(pop3d)),n=1),,],
Mauritaniaagepoptot                   =pop3d[head(grep("MRT",rownames(pop3d)),n=1):tail(grep("MRT",rownames(pop3d)),n=1),,],
Nigeragepoptot                        =pop3d[head(grep("NER",rownames(pop3d)),n=1):tail(grep("NER",rownames(pop3d)),n=1),,],
Nigeriaagepoptot                      =pop3d[head(grep("NGA",rownames(pop3d)),n=1):tail(grep("NGA",rownames(pop3d)),n=1),,],
Rwandaagepoptot                       =pop3d[head(grep("RWA",rownames(pop3d)),n=1):tail(grep("RWA",rownames(pop3d)),n=1),,],
Sudanagepoptot                        =pop3d[head(grep("SDN",rownames(pop3d)),n=1):tail(grep("SDN",rownames(pop3d)),n=1),,],
Senegalagepoptot                      =pop3d[head(grep("SEN",rownames(pop3d)),n=1):tail(grep("SEN",rownames(pop3d)),n=1),,],
SierraLeoneagepoptot                  =pop3d[head(grep("SLE",rownames(pop3d)),n=1):tail(grep("SLE",rownames(pop3d)),n=1),,],
Somaliaagepoptot                      =pop3d[head(grep("SOM",rownames(pop3d)),n=1):tail(grep("SOM",rownames(pop3d)),n=1),,],
SouthSudanagepoptot                   =pop3d[head(grep("SSD",rownames(pop3d)),n=1):tail(grep("SSD",rownames(pop3d)),n=1),,],
Chadagepoptot                         =pop3d[head(grep("TCD",rownames(pop3d)),n=1):tail(grep("TCD",rownames(pop3d)),n=1),,],
Tanzaniaagepoptot                     =pop3d[head(grep("TZA",rownames(pop3d)),n=1):tail(grep("TZA",rownames(pop3d)),n=1),,],
Togoagepoptot                         =pop3d[head(grep("TGO",rownames(pop3d)),n=1):tail(grep("TGO",rownames(pop3d)),n=1),,],
Ugandaagepoptot                       =pop3d[head(grep("UGA",rownames(pop3d)),n=1):tail(grep("UGA",rownames(pop3d)),n=1),,],
Zambiaagepoptot                       =pop3d[head(grep("ZMB",rownames(pop3d)),n=1):tail(grep("ZMB",rownames(pop3d)),n=1),,]
)
#Define age prop
ageproplist=list(
Angolaageprop                       =p_prop3d[head(grep("AGO",rownames(p_prop3d)),n=1):tail(grep("AGO",rownames(p_prop3d)),n=1),,],
Burundiageprop                      =p_prop3d[head(grep("BDI",rownames(p_prop3d)),n=1):tail(grep("BDI",rownames(p_prop3d)),n=1),,],
Beninageprop                        =p_prop3d[head(grep("BEN",rownames(p_prop3d)),n=1):tail(grep("BEN",rownames(p_prop3d)),n=1),,],
BurkinaFasoageprop                  =p_prop3d[head(grep("BFA",rownames(p_prop3d)),n=1):tail(grep("BFA",rownames(p_prop3d)),n=1),,],
Cameroonageprop                     =p_prop3d[head(grep("CMR",rownames(p_prop3d)),n=1):tail(grep("CMR",rownames(p_prop3d)),n=1),,],
CentralAfricanRepublicageprop       =p_prop3d[head(grep("CAF",rownames(p_prop3d)),n=1):tail(grep("CAF",rownames(p_prop3d)),n=1),,],
CotedIvoireageprop                  =p_prop3d[head(grep("CIV",rownames(p_prop3d)),n=1):tail(grep("CIV",rownames(p_prop3d)),n=1),,],
DemocraticRepublicoftheCongoageprop =p_prop3d[head(grep("COD",rownames(p_prop3d)),n=1):tail(grep("COD",rownames(p_prop3d)),n=1),,],
RepublicofCongoageprop              =p_prop3d[head(grep("COG",rownames(p_prop3d)),n=1):tail(grep("COG",rownames(p_prop3d)),n=1),,],
Eritreaageprop                      =p_prop3d[head(grep("ERI",rownames(p_prop3d)),n=1):tail(grep("ERI",rownames(p_prop3d)),n=1),,],
Ethiopiaageprop                     =p_prop3d[head(grep("ETH",rownames(p_prop3d)),n=1):tail(grep("ETH",rownames(p_prop3d)),n=1),,],
Gabonageprop                        =p_prop3d[head(grep("GAB",rownames(p_prop3d)),n=1):tail(grep("GAB",rownames(p_prop3d)),n=1),,],
Ghanaageprop                        =p_prop3d[head(grep("GHA",rownames(p_prop3d)),n=1):tail(grep("GHA",rownames(p_prop3d)),n=1),,],
Guineaageprop                       =p_prop3d[head(grep("GIN",rownames(p_prop3d)),n=1):tail(grep("GIN",rownames(p_prop3d)),n=1),,],
Gambiaageprop                       =p_prop3d[head(grep("GMB",rownames(p_prop3d)),n=1):tail(grep("GMB",rownames(p_prop3d)),n=1),,],
GuineaBissauageprop                 =p_prop3d[head(grep("GNB",rownames(p_prop3d)),n=1):tail(grep("GNB",rownames(p_prop3d)),n=1),,],
EquatorialGuineaageprop             =p_prop3d[head(grep("GNQ",rownames(p_prop3d)),n=1):tail(grep("GNQ",rownames(p_prop3d)),n=1),,],
Kenyaageprop                        =p_prop3d[head(grep("KEN",rownames(p_prop3d)),n=1):tail(grep("KEN",rownames(p_prop3d)),n=1),,],
Liberiaageprop                      =p_prop3d[head(grep("LBR",rownames(p_prop3d)),n=1):tail(grep("LBR",rownames(p_prop3d)),n=1),,],
Maliageprop                         =p_prop3d[head(grep("MLI",rownames(p_prop3d)),n=1):tail(grep("MLI",rownames(p_prop3d)),n=1),,],
Mauritaniaageprop                   =p_prop3d[head(grep("MRT",rownames(p_prop3d)),n=1):tail(grep("MRT",rownames(p_prop3d)),n=1),,],
Nigerageprop                        =p_prop3d[head(grep("NER",rownames(p_prop3d)),n=1):tail(grep("NER",rownames(p_prop3d)),n=1),,],
Nigeriaageprop                      =p_prop3d[head(grep("NGA",rownames(p_prop3d)),n=1):tail(grep("NGA",rownames(p_prop3d)),n=1),,],
Rwandaageprop                       =p_prop3d[head(grep("RWA",rownames(p_prop3d)),n=1):tail(grep("RWA",rownames(p_prop3d)),n=1),,],
Sudanageprop                        =p_prop3d[head(grep("SDN",rownames(p_prop3d)),n=1):tail(grep("SDN",rownames(p_prop3d)),n=1),,],
Senegalageprop                      =p_prop3d[head(grep("SEN",rownames(p_prop3d)),n=1):tail(grep("SEN",rownames(p_prop3d)),n=1),,],
SierraLeoneageprop                  =p_prop3d[head(grep("SLE",rownames(p_prop3d)),n=1):tail(grep("SLE",rownames(p_prop3d)),n=1),,],
Somaliaageprop                      =p_prop3d[head(grep("SOM",rownames(p_prop3d)),n=1):tail(grep("SOM",rownames(p_prop3d)),n=1),,],
SouthSudanageprop                   =p_prop3d[head(grep("SSD",rownames(p_prop3d)),n=1):tail(grep("SSD",rownames(p_prop3d)),n=1),,],
Chadageprop                         =p_prop3d[head(grep("TCD",rownames(p_prop3d)),n=1):tail(grep("TCD",rownames(p_prop3d)),n=1),,],
Tanzaniaageprop                     =p_prop3d[head(grep("TZA",rownames(p_prop3d)),n=1):tail(grep("TZA",rownames(p_prop3d)),n=1),,],
Togoageprop                         =p_prop3d[head(grep("TGO",rownames(p_prop3d)),n=1):tail(grep("TGO",rownames(p_prop3d)),n=1),,],
Ugandaageprop                       =p_prop3d[head(grep("UGA",rownames(p_prop3d)),n=1):tail(grep("UGA",rownames(p_prop3d)),n=1),,],
Zambiaageprop                       =p_prop3d[head(grep("ZMB",rownames(p_prop3d)),n=1):tail(grep("ZMB",rownames(p_prop3d)),n=1),,]
)
# (pop3d*p_prop3d)
#Calculate total vaccinated
totalvac<-p_prop3d[,,1:101]*vc3d[,,1:101]
totalvac[is.na(totalvac)]<-0
#Calculate country vaccination coverage
countryvac<-apply(totalvac,c(1,2),sum)
# countrypop<-apply(vc3d, c(1, 2), sum)
# countryvac<-(countryvac/countrypop)
#Read in SPID data
#Make a dataframe of SPID data
countrynames<-endemiczone$NAME_0
dataframeofcountriesandSPID<-data.frame(countrynames, paste0(endemiczone$ISO, endemiczone$ID_1), endemiczone$NAME_1)
dataframeofcountriesandSPID<-dataframeofcountriesandSPID[order(dataframeofcountriesandSPID$paste0.endemiczone.ISO..endemiczone.ID_1.),]
#Combine vaccination data with SPID data for easy reading
row.names(countryvac)[-which(row.names(countryvac) %in% dataframeofcountriesandSPID$SPID.SP_ID)]
countryvacdf<-data.frame(dataframeofcountriesandSPID,countryvac)
colnames(countryvacdf)[1]<-"provinces.NAME_0"
colnames(countryvacdf)[2]<-"SPID"
colnames(countryvacdf)[3]<-"provinces.NAME_1"
countryvacdf$provinces.NAME_0<-gsub("Guinea-Bissau","Guinea Bissau",as.character(countryvacdf$provinces.NAME_0))
dflist<-lapply(as.character(unique(countrynames)), function(x){
countrydata<-countryvacdf[countryvacdf$provinces.NAME_0 %in% x,]
countrydata
})
names(dflist)<-paste(gsub(" ", "", capitalize(tolower(unique(countryvacdf$provinces.NAME_0))), fixed = TRUE),"df",sep="")
save.image("NGA_update_2018.Rdata", compress = "gzip")
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
loc <- "/home/DIDE/ah1114/R/x86_64-pc-linux-gnu-library/3.2/"
.libPaths(c(.libPaths(), loc))
library(maptools)
library(plyr)
library(RColorBrewer)
library(fields)
library(leaflet)
library(plotly)
library(Hmisc)
library(rgeos)
library(rgdal)
setwd("//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining")
Sys.setlocale('LC_ALL','C')
load("NGA_update_2018.Rdata")
load("vaccination_data_combined_NGA_only_20180129.Rdata")
NGA_pprop3dmat<-p_prop3dmat
NGA_pop3dmat<-pop3dmat
NGA_vc3d<-vc3d
rm(p_prop3dmat)
rm(pop3dmat)
rm(vc3d)
load("vaccination_data_altered_20161212.Rdata")
vc3d[grepl("NGA", row.names(vc3d)), 11:111, ]<-NGA_pprop3dmat[grepl("NGA", row.names(NGA_pprop3dmat)), , ]
rm(NGA_pprop3dmat)
rm(NGA_pop3dmat)
rm(NGA_vc3d)
# suppressWarnings({
#   countryoutlines<-readOGR("endemiczonesimp.shp", use_iconv = TRUE, encoding = 'UTF-8')
#   endemiczone<-readOGR("africa_simplified_adm1_new.shp", use_iconv = TRUE, encoding = 'UTF-8')#readOGR("endemicfull.shp")
#   endemiczonelowres<-readOGR("africa_simplified_adm1_new.shp", use_iconv = TRUE, encoding = 'UTF-8')
# })
suppressWarnings({
countryoutlines<-readOGR("endemiczonesimp.shp")
endemiczone<-readOGR("endemicfull.shp")#readOGR("endemicfull.shp")
endemiczonelowres<-readOGR("endemic_adm1_simp2.shp")
})
endemiczonelowres<-endemiczonelowres[order(endemiczonelowres$SPID), ]
# endemiczone$NAME_0<-as.character(endemiczone$NAME_0)
# endemiczone[is.na(endemiczone$NAME_0), "NAME_0"]<-"Cote d'Ivoire"
# load("vaccination_data_combined_whole_africa_adm1_2nd_20180126.Rdata")
# load("vaccination_data_combined_whole_africa_adm1_part2_20180126.Rdata")
# load("vaccination_data_combined_africa_fixed_now_adm1_20180129.Rdata")
#
# pop3d<-vc3d
# vc3d<-p_prop3dmat
#
# for(i in as.character(unique(endemiczone$ISO))){
#   for(y in 1:101){
#     pop3dmat[grepl(i, row.names(pop3dmat)), y, ]<-pop3dmat[grepl(i, row.names(pop3dmat)), y, ]/rowSums(pop3dmat[grepl(i, row.names(pop3dmat)), y, ])
#   }
# }
#
# p_prop3d<-pop3dmat
#
#
# p_prop3dmat[, 2050-1950, ]<-p_prop3dmat[, 2049-1950, ]
# p_prop3d[, 2050-1950, ]<-p_prop3d[, 2049-1950, ]
#
# p_prop3dmat[is.na(p_prop3dmat)]<-0
# pop3d<-p_prop3dmat
# p_prop3d<-pop3dmat
# vc3d[, 2017-1950, 1]/pop3d[, 2017-1950, 1]
# #
# load("vaccination_data_20170118.Rdata")
#
#
# vc3d[grep("GMB",row.names(p_prop3d)),41,]
# #
# for(x in grep("GMB",row.names(p_prop3d))[2:length(grep("GMB",row.names(p_prop3d)))]){
#   vc3d[x,,] <- vc3d[grep("GMB",row.names(p_prop3d))[1],,]
#
# }
#
# which(row.names(vc3d) == "TZA_TZA_26")
# which(row.names(pop3d) == "TZA_26")
# which(row.names(p_prop3d) == "TZA_26")
# #
# vc3d<-vc3d[-406,,]
# pop3d<-pop3d[-406,,]
# p_prop3d<-p_prop3d[-406,,]
#
# save(pop3d, P_tot_2d, p_prop3d, vc3d, file = "vaccination_data_altered_20161212.Rdata")
#Load shapefiles
SPID<-read.csv("SPID.csv",stringsAsFactors = FALSE)
#Define opposite of %in%
'%!in%' <- function(x,y)!('%in%'(x,y))
#process
#Define different arrays
arraylist<-list(
Angolaarray                       =vc3d[head(grep("AGO",rownames(vc3d)),n=1):tail(grep("AGO",rownames(vc3d)),n=1),,],
Burundiarray                      =vc3d[head(grep("BDI",rownames(vc3d)),n=1):tail(grep("BDI",rownames(vc3d)),n=1),,],
Beninarray                        =vc3d[head(grep("BEN",rownames(vc3d)),n=1):tail(grep("BEN",rownames(vc3d)),n=1),,],
BurkinaFasoarray                  =vc3d[head(grep("BFA",rownames(vc3d)),n=1):tail(grep("BFA",rownames(vc3d)),n=1),,],
Cameroonarray                     =vc3d[head(grep("CMR",rownames(vc3d)),n=1):tail(grep("CMR",rownames(vc3d)),n=1),,],
CentralAfricanRepublicarray       =vc3d[head(grep("CAF",rownames(vc3d)),n=1):tail(grep("CAF",rownames(vc3d)),n=1),,],
CotedIvoirearray                  =vc3d[head(grep("CIV",rownames(vc3d)),n=1):tail(grep("CIV",rownames(vc3d)),n=1),,],
DemocraticRepublicoftheCongoarray =vc3d[head(grep("COD",rownames(vc3d)),n=1):tail(grep("COD",rownames(vc3d)),n=1),,],
RepublicofCongoarray              =vc3d[head(grep("COG",rownames(vc3d)),n=1):tail(grep("COG",rownames(vc3d)),n=1),,],
Eritreaarray                      =vc3d[head(grep("ERI",rownames(vc3d)),n=1):tail(grep("ERI",rownames(vc3d)),n=1),,],
Ethiopiaarray                     =vc3d[head(grep("ETH",rownames(vc3d)),n=1):tail(grep("ETH",rownames(vc3d)),n=1),,],
Gabonarray                        =vc3d[head(grep("GAB",rownames(vc3d)),n=1):tail(grep("GAB",rownames(vc3d)),n=1),,],
Ghanaarray                        =vc3d[head(grep("GHA",rownames(vc3d)),n=1):tail(grep("GHA",rownames(vc3d)),n=1),,],
Guineaarray                       =vc3d[head(grep("GIN",rownames(vc3d)),n=1):tail(grep("GIN",rownames(vc3d)),n=1),,],
Gambiaarray                       =vc3d[head(grep("GMB",rownames(vc3d)),n=1):tail(grep("GMB",rownames(vc3d)),n=1),,],
GuineaBissauarray                 =vc3d[head(grep("GNB",rownames(vc3d)),n=1):tail(grep("GNB",rownames(vc3d)),n=1),,],
EquatorialGuineaarray             =vc3d[head(grep("GNQ",rownames(vc3d)),n=1):tail(grep("GNQ",rownames(vc3d)),n=1),,],
Kenyaarray                        =vc3d[head(grep("KEN",rownames(vc3d)),n=1):tail(grep("KEN",rownames(vc3d)),n=1),,],
Liberiaarray                      =vc3d[head(grep("LBR",rownames(vc3d)),n=1):tail(grep("LBR",rownames(vc3d)),n=1),,],
Maliarray                         =vc3d[head(grep("MLI",rownames(vc3d)),n=1):tail(grep("MLI",rownames(vc3d)),n=1),,],
Mauritaniaarray                   =vc3d[head(grep("MRT",rownames(vc3d)),n=1):tail(grep("MRT",rownames(vc3d)),n=1),,],
Nigerarray                        =vc3d[head(grep("NER",rownames(vc3d)),n=1):tail(grep("NER",rownames(vc3d)),n=1),,],
Nigeriaarray                      =vc3d[head(grep("NGA",rownames(vc3d)),n=1):tail(grep("NGA",rownames(vc3d)),n=1),,],
Rwandaarray                       =vc3d[head(grep("RWA",rownames(vc3d)),n=1):tail(grep("RWA",rownames(vc3d)),n=1),,],
Sudanarray                        =vc3d[head(grep("SDN",rownames(vc3d)),n=1):tail(grep("SDN",rownames(vc3d)),n=1),,],
Senegalarray                      =vc3d[head(grep("SEN",rownames(vc3d)),n=1):tail(grep("SEN",rownames(vc3d)),n=1),,],
SierraLeonearray                  =vc3d[head(grep("SLE",rownames(vc3d)),n=1):tail(grep("SLE",rownames(vc3d)),n=1),,],
Somaliaarray                      =vc3d[head(grep("SOM",rownames(vc3d)),n=1):tail(grep("SOM",rownames(vc3d)),n=1),,],
SouthSudanarray                   =vc3d[head(grep("SSD",rownames(vc3d)),n=1):tail(grep("SSD",rownames(vc3d)),n=1),,],
Chadarray                         =vc3d[head(grep("TCD",rownames(vc3d)),n=1):tail(grep("TCD",rownames(vc3d)),n=1),,],
Tanzaniaarray                     =vc3d[head(grep("TZA",rownames(vc3d)),n=1):tail(grep("TZA",rownames(vc3d)),n=1),,],
Togoarray                         =vc3d[head(grep("TGO",rownames(vc3d)),n=1):tail(grep("TGO",rownames(vc3d)),n=1),,],
Ugandaarray                       =vc3d[head(grep("UGA",rownames(vc3d)),n=1):tail(grep("UGA",rownames(vc3d)),n=1),,],
Zambiaarray                       =vc3d[head(grep("ZMB",rownames(vc3d)),n=1):tail(grep("ZMB",rownames(vc3d)),n=1),,]
)
# '~~~¯\_(ツ)_/¯~~~'
#Define age pop total
agepoptotlist=list(
Angolaagepoptot                       =pop3d[head(grep("AGO",rownames(pop3d)),n=1):tail(grep("AGO",rownames(pop3d)),n=1),,],
Burundiagepoptot                      =pop3d[head(grep("BDI",rownames(pop3d)),n=1):tail(grep("BDI",rownames(pop3d)),n=1),,],
Beninagepoptot                        =pop3d[head(grep("BEN",rownames(pop3d)),n=1):tail(grep("BEN",rownames(pop3d)),n=1),,],
BurkinaFasoagepoptot                  =pop3d[head(grep("BFA",rownames(pop3d)),n=1):tail(grep("BFA",rownames(pop3d)),n=1),,],
Cameroonagepoptot                     =pop3d[head(grep("CMR",rownames(pop3d)),n=1):tail(grep("CMR",rownames(pop3d)),n=1),,],
CentralAfricanRepublicagepoptot       =pop3d[head(grep("CAF",rownames(pop3d)),n=1):tail(grep("CAF",rownames(pop3d)),n=1),,],
CotedIvoireagepoptot                  =pop3d[head(grep("CIV",rownames(pop3d)),n=1):tail(grep("CIV",rownames(pop3d)),n=1),,],
DemocraticRepublicoftheCongoagepoptot =pop3d[head(grep("COD",rownames(pop3d)),n=1):tail(grep("COD",rownames(pop3d)),n=1),,],
RepublicofCongoagepoptot              =pop3d[head(grep("COG",rownames(pop3d)),n=1):tail(grep("COG",rownames(pop3d)),n=1),,],
Eritreaagepoptot                      =pop3d[head(grep("ERI",rownames(pop3d)),n=1):tail(grep("ERI",rownames(pop3d)),n=1),,],
Ethiopiaagepoptot                     =pop3d[head(grep("ETH",rownames(pop3d)),n=1):tail(grep("ETH",rownames(pop3d)),n=1),,],
Gabonagepoptot                        =pop3d[head(grep("GAB",rownames(pop3d)),n=1):tail(grep("GAB",rownames(pop3d)),n=1),,],
Ghanaagepoptot                        =pop3d[head(grep("GHA",rownames(pop3d)),n=1):tail(grep("GHA",rownames(pop3d)),n=1),,],
Guineaagepoptot                       =pop3d[head(grep("GIN",rownames(pop3d)),n=1):tail(grep("GIN",rownames(pop3d)),n=1),,],
Gambiaagepoptot                       =pop3d[head(grep("GMB",rownames(pop3d)),n=1):tail(grep("GMB",rownames(pop3d)),n=1),,],
GuineaBissauagepoptot                 =pop3d[head(grep("GNB",rownames(pop3d)),n=1):tail(grep("GNB",rownames(pop3d)),n=1),,],
EquatorialGuineaagepoptot             =pop3d[head(grep("GNQ",rownames(pop3d)),n=1):tail(grep("GNQ",rownames(pop3d)),n=1),,],
Kenyaagepoptot                        =pop3d[head(grep("KEN",rownames(pop3d)),n=1):tail(grep("KEN",rownames(pop3d)),n=1),,],
Liberiaagepoptot                      =pop3d[head(grep("LBR",rownames(pop3d)),n=1):tail(grep("LBR",rownames(pop3d)),n=1),,],
Maliagepoptot                         =pop3d[head(grep("MLI",rownames(pop3d)),n=1):tail(grep("MLI",rownames(pop3d)),n=1),,],
Mauritaniaagepoptot                   =pop3d[head(grep("MRT",rownames(pop3d)),n=1):tail(grep("MRT",rownames(pop3d)),n=1),,],
Nigeragepoptot                        =pop3d[head(grep("NER",rownames(pop3d)),n=1):tail(grep("NER",rownames(pop3d)),n=1),,],
Nigeriaagepoptot                      =pop3d[head(grep("NGA",rownames(pop3d)),n=1):tail(grep("NGA",rownames(pop3d)),n=1),,],
Rwandaagepoptot                       =pop3d[head(grep("RWA",rownames(pop3d)),n=1):tail(grep("RWA",rownames(pop3d)),n=1),,],
Sudanagepoptot                        =pop3d[head(grep("SDN",rownames(pop3d)),n=1):tail(grep("SDN",rownames(pop3d)),n=1),,],
Senegalagepoptot                      =pop3d[head(grep("SEN",rownames(pop3d)),n=1):tail(grep("SEN",rownames(pop3d)),n=1),,],
SierraLeoneagepoptot                  =pop3d[head(grep("SLE",rownames(pop3d)),n=1):tail(grep("SLE",rownames(pop3d)),n=1),,],
Somaliaagepoptot                      =pop3d[head(grep("SOM",rownames(pop3d)),n=1):tail(grep("SOM",rownames(pop3d)),n=1),,],
SouthSudanagepoptot                   =pop3d[head(grep("SSD",rownames(pop3d)),n=1):tail(grep("SSD",rownames(pop3d)),n=1),,],
Chadagepoptot                         =pop3d[head(grep("TCD",rownames(pop3d)),n=1):tail(grep("TCD",rownames(pop3d)),n=1),,],
Tanzaniaagepoptot                     =pop3d[head(grep("TZA",rownames(pop3d)),n=1):tail(grep("TZA",rownames(pop3d)),n=1),,],
Togoagepoptot                         =pop3d[head(grep("TGO",rownames(pop3d)),n=1):tail(grep("TGO",rownames(pop3d)),n=1),,],
Ugandaagepoptot                       =pop3d[head(grep("UGA",rownames(pop3d)),n=1):tail(grep("UGA",rownames(pop3d)),n=1),,],
Zambiaagepoptot                       =pop3d[head(grep("ZMB",rownames(pop3d)),n=1):tail(grep("ZMB",rownames(pop3d)),n=1),,]
)
#Define age prop
ageproplist=list(
Angolaageprop                       =p_prop3d[head(grep("AGO",rownames(p_prop3d)),n=1):tail(grep("AGO",rownames(p_prop3d)),n=1),,],
Burundiageprop                      =p_prop3d[head(grep("BDI",rownames(p_prop3d)),n=1):tail(grep("BDI",rownames(p_prop3d)),n=1),,],
Beninageprop                        =p_prop3d[head(grep("BEN",rownames(p_prop3d)),n=1):tail(grep("BEN",rownames(p_prop3d)),n=1),,],
BurkinaFasoageprop                  =p_prop3d[head(grep("BFA",rownames(p_prop3d)),n=1):tail(grep("BFA",rownames(p_prop3d)),n=1),,],
Cameroonageprop                     =p_prop3d[head(grep("CMR",rownames(p_prop3d)),n=1):tail(grep("CMR",rownames(p_prop3d)),n=1),,],
CentralAfricanRepublicageprop       =p_prop3d[head(grep("CAF",rownames(p_prop3d)),n=1):tail(grep("CAF",rownames(p_prop3d)),n=1),,],
CotedIvoireageprop                  =p_prop3d[head(grep("CIV",rownames(p_prop3d)),n=1):tail(grep("CIV",rownames(p_prop3d)),n=1),,],
DemocraticRepublicoftheCongoageprop =p_prop3d[head(grep("COD",rownames(p_prop3d)),n=1):tail(grep("COD",rownames(p_prop3d)),n=1),,],
RepublicofCongoageprop              =p_prop3d[head(grep("COG",rownames(p_prop3d)),n=1):tail(grep("COG",rownames(p_prop3d)),n=1),,],
Eritreaageprop                      =p_prop3d[head(grep("ERI",rownames(p_prop3d)),n=1):tail(grep("ERI",rownames(p_prop3d)),n=1),,],
Ethiopiaageprop                     =p_prop3d[head(grep("ETH",rownames(p_prop3d)),n=1):tail(grep("ETH",rownames(p_prop3d)),n=1),,],
Gabonageprop                        =p_prop3d[head(grep("GAB",rownames(p_prop3d)),n=1):tail(grep("GAB",rownames(p_prop3d)),n=1),,],
Ghanaageprop                        =p_prop3d[head(grep("GHA",rownames(p_prop3d)),n=1):tail(grep("GHA",rownames(p_prop3d)),n=1),,],
Guineaageprop                       =p_prop3d[head(grep("GIN",rownames(p_prop3d)),n=1):tail(grep("GIN",rownames(p_prop3d)),n=1),,],
Gambiaageprop                       =p_prop3d[head(grep("GMB",rownames(p_prop3d)),n=1):tail(grep("GMB",rownames(p_prop3d)),n=1),,],
GuineaBissauageprop                 =p_prop3d[head(grep("GNB",rownames(p_prop3d)),n=1):tail(grep("GNB",rownames(p_prop3d)),n=1),,],
EquatorialGuineaageprop             =p_prop3d[head(grep("GNQ",rownames(p_prop3d)),n=1):tail(grep("GNQ",rownames(p_prop3d)),n=1),,],
Kenyaageprop                        =p_prop3d[head(grep("KEN",rownames(p_prop3d)),n=1):tail(grep("KEN",rownames(p_prop3d)),n=1),,],
Liberiaageprop                      =p_prop3d[head(grep("LBR",rownames(p_prop3d)),n=1):tail(grep("LBR",rownames(p_prop3d)),n=1),,],
Maliageprop                         =p_prop3d[head(grep("MLI",rownames(p_prop3d)),n=1):tail(grep("MLI",rownames(p_prop3d)),n=1),,],
Mauritaniaageprop                   =p_prop3d[head(grep("MRT",rownames(p_prop3d)),n=1):tail(grep("MRT",rownames(p_prop3d)),n=1),,],
Nigerageprop                        =p_prop3d[head(grep("NER",rownames(p_prop3d)),n=1):tail(grep("NER",rownames(p_prop3d)),n=1),,],
Nigeriaageprop                      =p_prop3d[head(grep("NGA",rownames(p_prop3d)),n=1):tail(grep("NGA",rownames(p_prop3d)),n=1),,],
Rwandaageprop                       =p_prop3d[head(grep("RWA",rownames(p_prop3d)),n=1):tail(grep("RWA",rownames(p_prop3d)),n=1),,],
Sudanageprop                        =p_prop3d[head(grep("SDN",rownames(p_prop3d)),n=1):tail(grep("SDN",rownames(p_prop3d)),n=1),,],
Senegalageprop                      =p_prop3d[head(grep("SEN",rownames(p_prop3d)),n=1):tail(grep("SEN",rownames(p_prop3d)),n=1),,],
SierraLeoneageprop                  =p_prop3d[head(grep("SLE",rownames(p_prop3d)),n=1):tail(grep("SLE",rownames(p_prop3d)),n=1),,],
Somaliaageprop                      =p_prop3d[head(grep("SOM",rownames(p_prop3d)),n=1):tail(grep("SOM",rownames(p_prop3d)),n=1),,],
SouthSudanageprop                   =p_prop3d[head(grep("SSD",rownames(p_prop3d)),n=1):tail(grep("SSD",rownames(p_prop3d)),n=1),,],
Chadageprop                         =p_prop3d[head(grep("TCD",rownames(p_prop3d)),n=1):tail(grep("TCD",rownames(p_prop3d)),n=1),,],
Tanzaniaageprop                     =p_prop3d[head(grep("TZA",rownames(p_prop3d)),n=1):tail(grep("TZA",rownames(p_prop3d)),n=1),,],
Togoageprop                         =p_prop3d[head(grep("TGO",rownames(p_prop3d)),n=1):tail(grep("TGO",rownames(p_prop3d)),n=1),,],
Ugandaageprop                       =p_prop3d[head(grep("UGA",rownames(p_prop3d)),n=1):tail(grep("UGA",rownames(p_prop3d)),n=1),,],
Zambiaageprop                       =p_prop3d[head(grep("ZMB",rownames(p_prop3d)),n=1):tail(grep("ZMB",rownames(p_prop3d)),n=1),,]
)
# (pop3d*p_prop3d)
#Calculate total vaccinated
totalvac<-p_prop3d[,,1:101]*vc3d[,,1:101]
totalvac[is.na(totalvac)]<-0
#Calculate country vaccination coverage
countryvac<-apply(totalvac,c(1,2),sum)
# countrypop<-apply(vc3d, c(1, 2), sum)
# countryvac<-(countryvac/countrypop)
#Read in SPID data
#Make a dataframe of SPID data
countrynames<-endemiczone$NAME_0
dataframeofcountriesandSPID<-data.frame(countrynames, paste0(endemiczone$ISO, endemiczone$ID_1), endemiczone$NAME_1)
dataframeofcountriesandSPID<-dataframeofcountriesandSPID[order(dataframeofcountriesandSPID$paste0.endemiczone.ISO..endemiczone.ID_1.),]
#Combine vaccination data with SPID data for easy reading
row.names(countryvac)[-which(row.names(countryvac) %in% dataframeofcountriesandSPID$SPID.SP_ID)]
countryvacdf<-data.frame(dataframeofcountriesandSPID,countryvac)
colnames(countryvacdf)[1]<-"provinces.NAME_0"
colnames(countryvacdf)[2]<-"SPID"
colnames(countryvacdf)[3]<-"provinces.NAME_1"
countryvacdf$provinces.NAME_0<-gsub("Guinea-Bissau","Guinea Bissau",as.character(countryvacdf$provinces.NAME_0))
dflist<-lapply(as.character(unique(countrynames)), function(x){
countrydata<-countryvacdf[countryvacdf$provinces.NAME_0 %in% x,]
countrydata
})
names(dflist)<-paste(gsub(" ", "", capitalize(tolower(unique(countryvacdf$provinces.NAME_0))), fixed = TRUE),"df",sep="")
# Old array finding - kept incase I broke it.
# arraylist<-list(
# Angolaarray=vc3d[1:18,,],
# Burundiarray=vc3d[19:35,,],
# Beninarray=vc3d[36:47,,],
# BurkinaFasoarray=vc3d[48:91,,],
# CentralAfricanRepublicarray=vc3d[92:108,,],
# CotedIvoirearray=vc3d[109:127,,],
# Cameroonarray=vc3d[128:137,,],
# DemocraticRepublicoftheCongoarray=vc3d[138:146,,],
# RepublicofCongoarray=vc3d[147:156,,],
# Eritreaarray=vc3d[157:162,,],
# Ethiopiaarray=vc3d[163:173,,],
# Gabonarray=vc3d[174:182,,],
# Ghanaarray=vc3d[183:192,,],
# Guineaarray=vc3d[193:200,,],
# Gambiaarray=vc3d[201:206,,],
# GuineaBissauarray=vc3d[207:215,,],
# EquatorialGuineaarray=vc3d[216:221,,],
# Kenyaarray=vc3d[222:229,,],
# Liberiaarray=vc3d[230:244,,],
# Maliarray=vc3d[245:253,,],
# Mauritaniaarray=vc3d[254:266,,],
# Nigerarray=vc3d[267:274,,],
# Nigeriaarray=vc3d[275:312,,],
# Rwandaarray=vc3d[313:322,,],
# Sudanarray=vc3d[323:328,,],
# Senegalarray=vc3d[329:339,,],
# SierraLeonearray=vc3d[340:343,,],
# Somaliaarray=vc3d[344:361,,],
# SouthSudanarray=vc3d[362:364,,],
# Chadarray=vc3d[365:382,,],
# Togoarray=vc3d[383:387,,],
# Tanzaniaarray=vc3d[388:412,,],
# Ugandaarray=vc3d[413:470,,],
# Zambiaarray=vc3d[471:479,,]
#)
#
#agepoptotlist=list(
# Angolaagepoptot=pop3d[1:18,,],
# Burundiagepoptot=pop3d[19:35,,],
# Beninagepoptot=pop3d[36:47,,],
# BurkinaFasoagepoptot=pop3d[48:91,,],
# CentralAfricanRepublicagepoptot=pop3d[92:108,,],
# CotedIvoireagepoptot=pop3d[109:127,,],
# Cameroonagepoptot=pop3d[128:137,,],
# DemocraticRepublicoftheCongoagepoptot=pop3d[138:146,,],
# RepublicofCongoagepoptot=pop3d[147:156,,],
# Eritreaagepoptot=pop3d[157:162,,],
# Ethiopiaagepoptot=pop3d[163:173,,],
# Gabonagepoptot=pop3d[174:182,,],
# Ghanaagepoptot=pop3d[183:192,,],
# Guineaagepoptot=pop3d[193:200,,],
# Gambiaagepoptot=pop3d[201:206,,],
# GuineaBissauagepoptot=pop3d[207:215,,],
# EquatorialGuineaagepoptot=pop3d[216:221,,],
# Kenyaagepoptot=pop3d[222:229,,],
# Liberiaagepoptot=pop3d[230:244,,],
# Maliagepoptot=pop3d[245:253,,],
# Mauritaniaagepoptot=pop3d[254:266,,],
# Nigeragepoptot=pop3d[267:274,,],
# Nigeriaagepoptot=pop3d[275:312,,],
# Rwandaagepoptot=pop3d[313:322,,],
# Sudanagepoptot=pop3d[323:328,,],
# Senegalagepoptot=pop3d[329:339,,],
# SierraLeoneagepoptot=pop3d[340:343,,],
# Somaliaagepoptot=pop3d[344:361,,],
# SouthSudanagepoptot=pop3d[362:364,,],
# Chadagepoptot=pop3d[365:382,,],
# Togoagepoptot=pop3d[383:387,,],
# Tanzaniaagepoptot=pop3d[388:412,,],
# Ugandaagepoptot=pop3d[413:470,,],
# Zambiaagepoptot=pop3d[471:479,,]
# )
# ageproplist=list(
# Angolaageprop=p_prop3d[1:18,,],
# Burundiageprop=p_prop3d[19:35,,],
# Beninageprop=p_prop3d[36:47,,],
# BurkinaFasoageprop=p_prop3d[48:91,,],
# CentralAfricanRepublicageprop=p_prop3d[92:108,,],
# CotedIvoireageprop=p_prop3d[109:127,,],
# Cameroonageprop=p_prop3d[128:137,,],
# DemocraticRepublicoftheCongoageprop=p_prop3d[138:146,,],
# RepublicofCongoageprop=p_prop3d[147:156,,],
# Eritreaageprop=p_prop3d[157:162,,],
# Ethiopiaageprop=p_prop3d[163:173,,],
# Gabonageprop=p_prop3d[174:182,,],
# Ghanaageprop=p_prop3d[183:192,,],
# Guineaageprop=p_prop3d[193:200,,],
# Gambiaageprop=p_prop3d[201:206,,],
# GuineaBissauageprop=p_prop3d[207:215,,],
# EquatorialGuineaageprop=p_prop3d[216:221,,],
# Kenyaageprop=p_prop3d[222:229,,],
# Liberiaageprop=p_prop3d[230:244,,],
# Maliageprop=p_prop3d[245:253,,],
# Mauritaniaageprop=p_prop3d[254:266,,],
# Nigerageprop=p_prop3d[267:273,,],
# Nigeriaageprop=p_prop3d[275:312,,],
# Rwandaageprop=p_prop3d[313:322,,],
# Sudanageprop=p_prop3d[323:328,,],
# Senegalageprop=p_prop3d[329:339,,],
# SierraLeoneageprop=p_prop3d[340:343,,],
# Somaliaageprop=p_prop3d[344:361,,],
# SouthSudanageprop=p_prop3d[362:364,,],
# Chadageprop=p_prop3d[365:382,,],
# Togoageprop=p_prop3d[383:387,,],
# Tanzaniaageprop=p_prop3d[388:412,,],
# Ugandaageprop=p_prop3d[413:470,,],
# Zambiaageprop=p_prop3d[471:479,,]
# )
save.image("NGA_update_2018.Rdata", compress = "gzip")
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
runApp('//fi--didenas1.dide.local/yf/Arran/Yellow fever shiny/Test/Streamlining')
